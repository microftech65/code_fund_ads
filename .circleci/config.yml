version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          CAMPAIGN_DEMO_ID: "395"
          PG_HOST: localhost
          PG_USERNAME: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
          DEFAULT_HOST: codefund.io
          PARALLEL_WORKERS: "1"
          REDIS_CACHE_URL: redis://127.0.0.1:6379
          REDIS_QUEUE_URL: redis://127.0.0.1:6379
          WORDPRESS_URL: 'https://codefund.io'
      - image: circleci/postgres:11.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: code_fund_ads_test
      - image: circleci/redis:5.0.4
    working_directory: ~/repo
    steps:
      - checkout
      - run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          curl -o- -L https://yarnpkg.com/install.sh | bash
      - restore_cache:
          name: restore gem cache
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-{{ arch }}-{{ .Branch }}
            - gem-cache-v1
      - restore_cache:
          name: restore yarn cache
          keys:
            - yarn-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-v1-{{ arch }}-{{ .Branch }}
            - yarn-cache-v1
      - restore_cache:
          name: restore assets cache
          keys:
            - assets-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - assets-cache-v1-{{ arch }}-{{ .Branch }}
      - run:
          name: install gem dependencies
          command: |
            gem install bundler:2.0.1
            bundle check || bundle install --jobs=6 --retry=3 --path vendor/bundle
      - run:
          name: install yarn dependencies
          command: yarn install --ignore-engines --frozen-lockfile
      - run:
          name: precompile assets
          command: |
              if [[ ! -d public/packs-test ]]; then
                  bundle exec rails webpacker:compile
              else
                  echo "Asset cache found and applied."
              fi
      - save_cache:
          name: save gem cache
          paths:
            - vendor/bundle
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - save_cache:
          name: save yarn cache
          paths:
            - ~/.cache/yarn
          key: yarn-cache-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: set up DB
          command: bundle exec rails db:drop db:create db:structure:load --trace
      # This task is broken until Rails 6.0.3 is released. See comment in bin/standardize
      # - run:
      #     name: run zeitwerk:check
      #     command: bundle exec rails zeitwerk:check
      - run:
          name: run tests
          command: |
            bundle exec rails test
            set +e
            bundle exec rails test:system
      - store_artifacts:
          path: tmp/screenshots
          destination: screenshots
      - save_cache:
          name: save assets cache
          key: assets-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - public/packs-test
      - run:
          name: run standardrb check
          command: bundle exec standardrb --format progress
      - run:
          name: run ERB lint check
          command: bundle exec erblint app/views/**/*.html.erb
      - run:
          name: run prettier-standard check
          command: yarn run --ignore-engines prettier-standard --check 'app/**/*.js'
